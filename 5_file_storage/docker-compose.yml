version: "3.7"

services:
  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
    networks:
      - innerNetwork

  nginx:
    image: nginx:1.23.4
    container_name: nginx
    ports:
      - ${NGINX_PORT_EXTERNAL}:${NGINX_PORT}
    volumes:
      - ./ngnix/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    env_file:
      - .env
    networks:
      - innerNetwork
    depends_on:
      - fileserver


  redis:
    image: redis:7.0.5
    container_name: redis
    ports:
      - ${REDIS_PORT}
    env_file:
      - .env
    volumes:
      - ./cache:/data
    networks:
      - innerNetwork

  fileserver:
    image: file_server
    container_name: app
    build:
      context: .
    env_file:
      - .env
    restart: always
    command: ${COMMAND_RUN}
    networks:
      - innerNetwork
    depends_on:
      - postgres
      - redis

networks:
  innerNetwork:
    driver: bridge
volumes:
  postgres_data:
